# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['**']
  push:
    branches: ['**']

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.13]
        java: [temurin@11, temurin@17]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@11)
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
          cache: sbt

      - name: Setup Java (temurin@17)
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: sbt

      - name: Start up LocalStack on Docker
        run: docker compose up -d

      - name: Wait for LocalStack to start
        run: |
          set -x
          until [ "$(docker inspect --format='{{.State.Health.Status}}' localstack_ixias)" = 'healthy' ]; do
            sleep 10s
          done

      - name: Create SNS topic
        env:
          AWS_ACCESS_KEY_ID: dummy
          AWS_SECRET_ACCESS_KEY: dummy
          AWS_DEFAULT_REGION: ap-northeast-1
        run: |
          aws sns create-topic --name testSNS --endpoint-url http://localhost:4566 --region ap-northeast-1
          aws sns subscribe --topic-arn arn:aws:sns:ap-northeast-1:000000000000:testSNS --protocol lambda --notification-endpoint arn:aws:lambda:ap-northeast-1:000000000000:function:testFunction --endpoint-url http://localhost:4566 --region ap-northeast-1

      - name: Create S3 object
        env:
          AWS_ACCESS_KEY_ID: dummy
          AWS_SECRET_ACCESS_KEY: dummy
          AWS_DEFAULT_REGION: ap-northeast-1
        run: 'aws s3api create-bucket --bucket "dummy" --create-bucket-configuration "LocationConstraint=ap-northeast-1" --endpoint-url "http://localhost:4566" --region ap-northeast-1'

      - name: Create SES object
        env:
          AWS_ACCESS_KEY_ID: dummy
          AWS_SECRET_ACCESS_KEY: dummy
          AWS_DEFAULT_REGION: ap-northeast-1
        run: 'aws ses verify-email-identity --email-address "takahiko.tominaga@nextbeat.net" --endpoint-url=http://localhost:4566'

      - name: Check that workflows are up to date
        run: sbt '++ ${{ matrix.scala }}' githubWorkflowCheck

      - name: Build project
        run: sbt '++ ${{ matrix.scala }}' test

      - name: Stop LocalStack on Docker
        run: docker compose down

      - name: Compress target directories
        run: tar cf targets.tar framework/ixias-aws/sns/target framework/ixias-mail/target framework/ixias-aws/core/target framework/ixias-aws/ses/target docs/target framework/ixias-aws/s3/target framework/ixias-play-auth/target framework/ixias-slick/target framework/ixias-play-core/target framework/ixias-aws-s3-lib/target framework/ixias-core/target target project/target

      - name: Upload target directories
        uses: actions/upload-artifact@v3
        with:
          name: target-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
          path: targets.tar

  publish:
    name: Publish Artifacts
    needs: [build]
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main')
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.18]
        java: [temurin@11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@11)
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
          cache: sbt

      - name: Setup Java (temurin@17)
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: sbt

      - name: Download target directories (2.13.13)
        uses: actions/download-artifact@v3
        with:
          name: target-${{ matrix.os }}-2.13.13-${{ matrix.java }}

      - name: Inflate target directories (2.13.13)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Publish project
        run: sbt +publish

  scalafmt:
    name: Scalafmt
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.13]
        java: [temurin@11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@11)
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
          cache: sbt

      - name: Setup Java (temurin@17)
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: sbt

      - name: Scalafmt check
        run: sbt scalafmtCheckAll 'project /' scalafmtSbtCheck
